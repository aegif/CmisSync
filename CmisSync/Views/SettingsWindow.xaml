<Window x:Class="CmisSync.Views.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:CmisSync.Views.Converters"
        Title="Settings" MinWidth="300" MaxWidth="600" SizeToContent="WidthAndHeight" Icon="/CmisSync;component/Resources/cmissync-app.ico">
    <StackPanel Margin="10">
        <Grid>
            <Grid.Resources>
                <Style TargetType="{x:Type FrameworkElement}">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                </Style>
                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
                    <Style.Triggers>
                        <Trigger Property="Grid.Column" Value="0">
                            <Setter Property="HorizontalAlignment" Value="Right"/>
                            <Setter Property="Margin" Value="0,2,8,2"/>
                        </Trigger>
                        <Trigger Property="Grid.Column" Value="1">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type FrameworkElement}}"/>
                <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type FrameworkElement}}"/>
                <Style TargetType="{x:Type TextBox}">
                    <Style.Triggers>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Background" Value="#FFF1F1F1"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <converters:IntToPollIntervalConverter x:Key="intToPollIntervalConverter"/>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock Text="Name:" Grid.Row="0" Grid.Column="0"/>
            <TextBox IsReadOnly="True" Text="{Binding DisplayName, Mode=OneWay}" Grid.Row="0" Grid.Column="1"/>

            <TextBlock Text="LastSuccessedSync:" Grid.Row="1" Grid.Column="0"/>
            <TextBox IsReadOnly="True" Text="{Binding LastSuccessedSync, Mode=OneWay}" Grid.Row="1" Grid.Column="1"/>

            <TextBlock Text="Profile:" Grid.Row="2" Grid.Column="0"/>
            <TextBox IsReadOnly="True" Text="{Binding Account.DisplayName, Mode=OneWay}" Grid.Row="2" Grid.Column="1"/>

            <TextBlock Text="Server Url:" Grid.Row="3" Grid.Column="0"/>
            <TextBox IsReadOnly="True" Text="{Binding Account.RemoteUrl, Mode=OneWay}" Grid.Row="3" Grid.Column="1"/>

            <TextBlock Text="User:" Grid.Row="4" Grid.Column="0"/>
            <TextBox IsReadOnly="True" Text="{Binding Account.Credentials.UserName, Mode=OneWay}" Grid.Row="4" Grid.Column="1"/>

            <TextBlock Text="Remote Path:" Grid.Row="5" Grid.Column="0"/>
            <TextBox IsReadOnly="True" Text="{Binding RemotePath, Mode=OneWay}" Grid.Row="5" Grid.Column="1"/>

            <TextBlock Text="Local Path:" Grid.Row="6" Grid.Column="0"/>
            <TextBox IsReadOnly="True" Text="{Binding LocalPath, Mode=OneWay}" Grid.Row="6" Grid.Column="1"/>

            <TextBlock Text="Sync at Startup:" Grid.Row="7" Grid.Column="0"/>
            <CheckBox IsChecked="{Binding SyncAtStartup}" Grid.Row="7" Grid.Column="1"/>

            <TextBlock Text="Poll Interval:" Grid.Row="8" Grid.Column="0"/>
            <ComboBox IsEditable="true" Text="{Binding PollInterval, Converter={StaticResource intToPollIntervalConverter}, ValidatesOnExceptions=True}"  Grid.Row="8" Grid.Column="1" Width="200">
                <ComboBoxItem>1 minute</ComboBoxItem>
                <ComboBoxItem>5 minute</ComboBoxItem>
                <ComboBoxItem>1 hour</ComboBoxItem>
            </ComboBox>

        </Grid>
        <StackPanel Orientation="Horizontal" Margin="2" HorizontalAlignment="Center">
            <Button Command="{Binding SaveCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Content="Save" Margin="2" IsDefault="True"/>
            <Button Command="{Binding CancelCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Content="Cancel" Margin="2"/>
        </StackPanel>
    </StackPanel>
</Window>
